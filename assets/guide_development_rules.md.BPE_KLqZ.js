import{_ as i,R as a,Q as s,S as e,G as l}from"./chunks/framework.BBTDMeVS.js";const k=JSON.parse('{"title":"开发规范","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/development/rules.md","filePath":"guide/development/rules.md","lastUpdated":1761543469000}'),n={name:"guide/development/rules.md"};function t(r,h,o,d,c,p){return s(),a("div",null,[e("h1",{id:"开发规范",tabindex:"-1"},[l("开发规范 "),e("a",{class:"header-anchor",href:"#开发规范","aria-label":"Permalink to “开发规范”"},"​")]),e("p",null,[l("为了维护项目的代码质量，项目中内置了格式化代码的工具 "),e("code",null,"Prettier"),l(" 和代码检测质量检查工具 "),e("code",null,"ESlint"),l("。")]),e("p",null,"同时，也推荐您在开发过程中遵循提交规范，以保持项目仓库的分支、提交信息的清晰整洁。"),e("h2",{id:"代码编写规范",tabindex:"-1"},[l("代码编写规范 "),e("a",{class:"header-anchor",href:"#代码编写规范","aria-label":"Permalink to “代码编写规范”"},"​")]),e("h3",{id:"prettier",tabindex:"-1"},[e("a",{href:"https://prettier.io/",target:"_blank",rel:"noreferrer"},"Prettier"),l(),e("a",{class:"header-anchor",href:"#prettier","aria-label":"Permalink to “Prettier”"},"​")]),e("p",null,[l("如果您希望项目中的代码都符合统一的格式，推荐您在 VS Code 中安装 "),e("code",null,"Prettier"),l(" 插件。它可以帮助您在每次保存时自动化格式化代码。")]),e("p",null,[l("在脚手架搭建好的项目中，已经内置了符合 Pro Design 开发规范的 "),e("code",null,".prettierrc.json"),l(" 文件。您只需要安装 "),e("code",null,"Prettier"),l(" 插件，即可使用代码自动格式化的功能。")]),e("h3",{id:"eslint",tabindex:"-1"},[e("a",{href:"https://eslint.org/",target:"_blank",rel:"noreferrer"},"Eslint"),l(),e("a",{class:"header-anchor",href:"#eslint","aria-label":"Permalink to “Eslint”"},"​")]),e("p",null,[e("code",null,"ESlint"),l("可以用来检查代码质量和风格问题。")]),e("p",null,[l("在脚手架搭建好的项目中，也已经内置了 "),e("code",null,"eslint.config.ts"),l(" 文件。您可以通过下面命令来进行代码检查和自动修复。")]),e("p",null,"执行以下指令，会进行问题的检查及修复，在 pre-commit 的 git hook 中，项目也内置了检查指令，帮助您在提交代码前发现问题。"),e("div",{class:"language-bash"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark",style:{"--shiki-light":"#24292e","--shiki-dark":"#e1e4e8","--shiki-light-bg":"#fff","--shiki-dark-bg":"#24292e"},tabindex:"0",dir:"ltr"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# 代码检查")]),l(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"pnpm"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," run"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," lint")]),l(`
`),e("span",{class:"line"}),l(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# 自动修复问题")]),l(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"pnpm"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," run"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," lint:fix")])])])]),e("h2",{id:"目录的命名规范",tabindex:"-1"},[l("目录的命名规范 "),e("a",{class:"header-anchor",href:"#目录的命名规范","aria-label":"Permalink to “目录的命名规范”"},"​")]),e("p",null,[l("1.目录名全部使用小写，单词需采用复数形式，"),e("code",null,"kebab-case"),l("形式命名，如果需要有多个单词表达，使用中划线连接。如n"),e("code",null,"ew-page"),l("、"),e("code",null,"components"),l("。")]),e("h2",{id:"文件的命名规范",tabindex:"-1"},[l("文件的命名规范 "),e("a",{class:"header-anchor",href:"#文件的命名规范","aria-label":"Permalink to “文件的命名规范”"},"​")]),e("p",null,"文件的命名规范按照不同情况进行命名"),e("p",null,[l("1.如果该文件是单文件组件/类，采用"),e("code",null,"PascalCase"),l("形式命名，方便导入和使用。如"),e("code",null,"ProSelect.vue")]),e("p",null,[l("2.如果该文件是目录下的主文件，采用 index 名称命名，方便导入。如 "),e("code",null,"index.ts"),l(", "),e("code",null,"index.vue")]),e("p",null,[l("3.如果该文件是接口定义文件，采用"),e("code",null,"camelCase"),l("形式命名，方便区分文件关联性。如 "),e("code",null,"list.ts"),l(" 和 "),e("code",null,"listModel.ts")]),e("p",null,[l("4.如果该文件是资源/样式文件，采用"),e("code",null,"kebab-case"),l("形式命名。")]),e("h2",{id:"类及接口的命名规范",tabindex:"-1"},[l("类及接口的命名规范 "),e("a",{class:"header-anchor",href:"#类及接口的命名规范","aria-label":"Permalink to “类及接口的命名规范”"},"​")]),e("p",null,[l("1.采用"),e("code",null,"PascalCase"),l("形式命名。")]),e("h2",{id:"分支规范",tabindex:"-1"},[l("分支规范 "),e("a",{class:"header-anchor",href:"#分支规范","aria-label":"Permalink to “分支规范”"},"​")]),e("ul",null,[e("li",null,"开发主干分支 -- develop"),e("li",null,"功能分支 -- feature"),e("li",null,"修复分支 -- hotfix")]),e("p",null,[e("code",null,"develop"),l("分支只接受通过 Merge Request 合入功能分支，不能直接在该分支开发。")]),e("p",null,[l("为保证提交的记录干净整洁，其他分支合入之前需要先 "),e("code",null,"rebase"),l(" develop 分支。")]),e("p",null,[e("strong",null,"分支命名规则"),l("："),e("code",null,"feature/20250401_功能名称"),l("。")]),e("h2",{id:"commit-规范",tabindex:"-1"},[l("commit 规范 "),e("a",{class:"header-anchor",href:"#commit-规范","aria-label":"Permalink to “commit 规范”"},"​")]),e("p",null,[l("推荐使用 "),e("a",{href:"https://www.conventionalcommits.org/en/v1.0.0/#summary",target:"_blank",rel:"noreferrer"},"Conventional Commits"),l(" 规范作为您的 commit message 的格式。")]),e("p",null,"同时，当项目是协同开发时，推荐在项目中或者在持续集成的过程中，配置 commit-lint 做 commit message 的检查，以约束协同开发者的 commit 遵守规范。"),e("p",null,[e("strong",null,[l("tips:如果不熟悉 Conventional Commits 的规范，可以使用 "),e("code",null,"pnpm run commit"),l(" 生成 commit message。")])]),e("div",{class:"language-bash"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark",style:{"--shiki-light":"#24292e","--shiki-dark":"#e1e4e8","--shiki-light-bg":"#fff","--shiki-dark-bg":"#24292e"},tabindex:"0",dir:"ltr"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"git"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," add"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," .")]),l(`
`),e("span",{class:"line"}),l(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"pnpm"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," run"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," commit")])])])])])}const m=i(n,[["render",t]]);export{k as __pageData,m as default};
